services:
  # Service to extract data and generate init_db.sql
  data-extractor:
    build: .
    volumes:
      - ./data:/app/data
      - ./sql:/app/sql
      - ./scripts:/app/scripts
    working_dir: /app/scripts
    command: ["python", "-u", "extract.py"]
    environment:
      - PYTHONUNBUFFERED=1
    profiles:
      - setup

  postgres:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-titanic}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  titanic-api:
    build: .
    env_file:
      - .env
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG=${DEBUG:-false}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-titanic}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
