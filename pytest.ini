[tool:pytest]
# Pytest-Konfiguration für Titanic API Tests

# Test-Verzeichnisse
testpaths = tests

# Test-Dateien-Pattern
python_files = test_*.py

# Test-Funktions-Pattern
python_functions = test_*

# Test-Klassen-Pattern
python_classes = Test*

# Marker-Definitionen
markers =
    unit: Unit Tests (schnell, isoliert)
    integration: Integration Tests (benötigen Datenbank)
    performance: Performance Tests (langsam)
    slow: Langsame Tests
    api: API-Endpunkt Tests
    database: Datenbank-Tests

# Addops für bessere Ausgabe
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=api
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml

# Minimale Coverage-Anforderung
[coverage:run]
source = api
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:

# Mindest-Coverage in Prozent
fail_under = 80
